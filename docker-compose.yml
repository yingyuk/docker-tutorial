version: "3"
services:
  # 实例名称叫 web
  web:
    # 拉取远程镜像
    # image: username/repo:tag
    image:  yingyu/hello:v1.0.0
    # replace username/repo:tag with your name and image details
    # 替换成你的用户名和仓库,标签
    deploy:
      # 创建 5 个实例
      replicas: 5
      resources:
        # 限制 
        limits:
          # 每个实例最多使用 10% 的 CPU (跨核心)
          cpus: "0.1"
          # 每个实例最多使用 50MB的 RAM
          memory: 50M
      restart_policy:
        condition: on-failure
    ports:
      # 将宿主机的80端口和实例的80端口绑定
      # 宿主:实例
      - "80:80"
    networks:
      # 通过 webnet 实现 80 端口负载平衡
      - webnet
  # 可视化
  visualizer:
    # 这是一个开源的 docker 实例可视化镜像
    image: dockersamples/visualizer:stable
    ports:
      - "8080:8080"
    # 与宿主机共享文件夹
    volumes:
      # 宿主:实例
      - "/var/run/docker.sock:/var/run/docker.sock"
    deploy:
      # 放置位置
      placement:
        # 只放置在管理机上
        constraints: [node.role == manager]
    networks:
      - webnet
  ### 从这里开始添加
  redis:
    image: redis
    ports:
      - "6379:6379"
    # 与宿主机共享文件夹, 避免 redis 容器删除后, 访问数据丢失      
    volumes:
      - /home/docker/data:/data
    deploy:
      placement:
        # 只放置在管理机上      
        constraints: [node.role == manager]
    command: redis-server --appendonly yes
    networks:
      - webnet  
  ### 添加完成
networks:
  # webnet 配置; 没有就使用默认配置
  webnet:
